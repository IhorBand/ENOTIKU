@model kinotiki.Web.Models.Account.RegisterUser

@{
    ViewBag.Title = "Edit Account";
}

@section headContent {
    @Scripts.Render("~/budles/scripts/registerValidation")
}

<style>
    input.btn {
        width: 100%;
        max-width: 300px;
        font-size: 30px;
    }

    .radio-btn-container > div {
        margin-right: 20px;
    }

    .radio-btn-container input {
        height: 19px;
        width: 19px;
        margin-right: 10px;
    }
</style>

<script>

    function Validate(validateRet, event) {
        let msgContainer = jQuery('.js--error-msg');
        let msg = msgContainer.find('span');

        if (validateRet != null && !validateRet.Ok) {
            //event.preventDefault();
            msgContainer.show();
            msg.text(validateRet.message);
            return false;
        }
        return true;
    }

    function ClickedBtn(el) {
        let event = null;
        let login = jQuery('.js--login-value').val();
        let pass = jQuer('.js--pass-value').val();
        let email = jQuery('.js--email-value').val();
        let birthday = jQuery('.js--birthday-value').val();

        let validateLogin = isValidLogin(login);
        if (!Validate(validateLogin, event))
            return false;

        let validatePass = isValidPass(login);
        if (!Validate(validatePass, event))
            return false;

        let validateEmail = isEmail(email);
        if (!Validate(validateEmail, event))
            return false;

        let validateBirthday = isValidBirthday(birthday);
        if (!Validate(validateBirthday, event))
            return false;
        return true;
    }

</script>

<div class="content">
    @using (Html.BeginForm("EditAccount", "Account", FormMethod.Post, new { enctype = "multipart/form-data" })) 
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div style="text-align:center;">
                <span style="text-align:center;">User</span>
            </div>
            <div style="text-align:center; display:none;" class="js--error-msg">
                <span style="color: red;"></span>
            </div>
            <hr />
            @Html.ValidationSummary(true)

            @Html.HiddenFor(m => m.id)

            <div class="form-group">
                <span>Login:</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.login, new { htmlAttributes = new { @class = "form-control js--login-value"} })
                    @Html.ValidationMessageFor(model => model.login, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <span>Password:</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control js--pass-value", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <span>Email:</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control js--email-value" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <span>Gender:</span>
                </div>
                <div class="col-md-10 d-flex align-items-center radio-btn-container">
                    <div class="d-flex align-items-center">
                        @Html.RadioButtonFor(m => m.sex, (int)kinotiki.BLL.Entity.Enums.GenderType.Male) <span>Male</span>
                    </div>
                    <div class="d-flex align-items-center">
                        @Html.RadioButtonFor(m => m.sex, (int)kinotiki.BLL.Entity.Enums.GenderType.Female) <span>Female</span>
                    </div>
                    <div class="d-flex align-items-center">
                        @Html.RadioButtonFor(m => m.sex, (int)kinotiki.BLL.Entity.Enums.GenderType.Alien) <span>Alien</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <span>Your Birthday:</span>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthdayDate, new { htmlAttributes = new { @class = "form-control js--birthday-value", @type= "date", @value = Model.BirthdayDate } })
                    @Html.ValidationMessageFor(model => model.BirthdayDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <span>Image:</span>
                <div style="max-width: 200px;">
                    @if (Model != null && Model.imageData == null)
                    {
                        <img width="100" style="height:auto; width: 100%;" src="@Url.Content(kinotiki.Web.Helpers.WebHelper.GetDefaultUserImageSrc(Model.sex))" alt="user-image" />
                    }
                    else
                    {
                        <img width="100" style="height:auto; width: 100%;" src="@Url.Action("GetImage", "Account", new { Model.login })" alt="user-image" />
                    }
                </div>
                <div class="col-md-10">
                    <div>
                        <div>
                            <span>Upload new image:</span>
                        </div>
                        <input type="text" id="fileName" readonly="readonly">
                        <div class="file_input_div" style="display: inline;">
                            <input type="button" id="button" value="Open" />
                            <input type="file" style="opacity:0; position:relative; left:-40px;" name="Image" onchange="javascript: document.getElementById('fileName').value = this.value" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="d-flex justify-content-center">
                    <input type="submit" value="Edit" onclick="return ClickedBtn(this);" id="form-edit-btn-submit" class="btn btn-lg btn-dark" />
                </div>
            </div>
        </div>
    
    }
</div>