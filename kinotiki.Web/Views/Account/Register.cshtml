@model kinotiki.Web.Models.Account.RegisterUser

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

@section headContent {
    @Styles.Render("~/Content/Styles/login")
    @Scripts.Render("~/budles/scripts/registerValidation")
}

<style>
    * {
        color: white;
    }

    .main-content {
        min-height: 750px;
    }


    h3, h4 {
	    color: rgb(219, 219, 25);
    }
    .form-group input.register-submit {
        width: 40%;
        margin: 5px 0 25px;
        padding: 0;
    }
    .register-submit {
        color: rgb(43, 38, 38);
        background-color: rgb(219, 219, 25);
        font-size: 20px;
        border-radius: 5px;
        border: 1px solid #daf1ff;
    }
    .register-submit:hover {
        background-color: rgb(121, 121, 7);
        border: 1px solid #daf1ff;
        color: white;
    }

</style>


<script>

    function Validate(validateRet, event) {
        let msgContainer = jQuery('.js--error-msg');
        let msg = msgContainer.find('span');

        if (validateRet != null && !validateRet.Ok) {
            //event.preventDefault();
            msgContainer.show();
            msg.text(validateRet.message);
            return false;
        }
        return true;
    }

    function ClickedBtn(el) {
        let event = null;
        let login = jQuery('.js--login-value').val();
        let pass = jQuery('.js--pass-value').val();
        let email = jQuery('.js--email-value').val();
        let birthday = jQuery('.js--birthday-value').val();

        let validateLogin = isValidLogin(login);
        if (!Validate(validateLogin, event))
            return false;

        let validatePass = isValidPass(login);
        if (!Validate(validatePass, event))
            return false;

        let validateEmail = isEmail(email);
        if (!Validate(validateEmail, event))
            return false;

        let validateBirthday = isValidBirthday(birthday);
        if (!Validate(validateBirthday, event))
            return false;
        return true;
    }

</script>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid main-content">
        <div class="d-flex justify-content-center align-items-center h-100">
            <div class="modal-dialog text-center login-main-section">
                <div class="col-sm-12 main-section">
                    <div class="modal-content">
                        <div class="col-12" style="margin-top: 10px; margin-bottom: 10px;">
                            <h3>Registration</h3>
                            <h4>Fill in the fields</h4>
                            <div style="text-align:center; display:none;" class="js--error-msg">
                                <span style="color: red;"></span>
                            </div>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.EditorFor(model => model.login, new { htmlAttributes = new { @class = "form-control js--login-value", placeholder = "Enter Login" } })
                            @Html.ValidationMessageFor(model => model.login, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control js--pass-value", placeholder = "Enter Password" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control js--email-value", placeholder = "Enter Email" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.EditorFor(model => model.BirthdayDate, new { htmlAttributes = new { @class = "form-control js--birthday-value", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.BirthdayDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-flex justify-content-center align-content-center" style="margin-bottom: 25px;">
                            <div style="margin-right: 10px;">
                                Gender:
                            </div>
                            <div class="">
                                @Html.RadioButtonFor(m => m.sex, (int)kinotiki.BLL.Entity.Enums.GenderType.Male) Male
                                @Html.RadioButtonFor(m => m.sex, (int)kinotiki.BLL.Entity.Enums.GenderType.Female) Female
                                @Html.RadioButtonFor(m => m.sex, (int)kinotiki.BLL.Entity.Enums.GenderType.Alien, new { @checked = true }) Alien
                            </div>
                        </div>

                        <div class="form-group">
                            Upload your image:
                            <div class="col-sm-12">
                                <input type="file" name="Image" accept="image/*" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-sm-offset-2">
                                <input type="submit" value="Register" onclick="return ClickedBtn(this);" class="register-submit" id="register-submit-btn" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}