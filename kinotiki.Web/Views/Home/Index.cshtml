@{
    ViewBag.Title = "Home Page";
}
@*
    TODO:
        Show Movies
@Html.Action("GetAllHeaderPosts", "Post", new { pageSize = ViewBag.SizeOfPosts, pageNum = ViewBag.CurPageNum })

*@

@Scripts.Render("~/budles/scripts/moviedbhelper")

<div class="form container">
    <h3>Search For Movies</h3>
    <form onsubmit="returnByKeywords(event);">
        <div class="inputDiv"> <input class="keywordInput" type="text" placeholder="movie name"> <input type="submit" value="Search"> </div>
    </form>
</div>

<div class="wrapper trending">
    <h3>Here are the top trending movies/TV shows</h3>
</div>

<script>

    let theMovieDbHelper = new TheMovieDbHelper();


    /*
    new design
    */

    function getRandomInt(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }


    /* Movie In The Top */
    //TODO: Need To write logic to insert movie in html
    function getRandomMovieFromTop() {
        theMovieDbHelper.GetTrendingAllWeek(
            function (data) {
                if (data != null && data.results != null && data.results.length != null && data.results.length > 0) {
                    var index = getRandomInt(0,data.results.length);
                    let movie = data.results[index];
                    if (movie != null) {
                        renderRandomTopMovie(movie);
                    }
                }
            },
            function (error) {
                console.log(error);
            }
        );
    }

    function renderRandomTopMovie(movie) {

    }


    /* Now Playing */
    //TODO: Need To write logic to insert movie in html
    function GetNowPlayingMovies() {
        theMovieDbHelper.GetNowPlaying(null,
            function (data) {
                if (data != null && data.results != null && data.results.length != null && data.results.length > 0) {
                    RenderNowPlayingMovies(data.results);
                }
            },
            function (error) {
                console.log(error);
            }
        );
    }

    function RenderNowPlayingMovies(movies) {

    }


    /*Trailers*/
    function GetTopRatedMovies() {
        theMovieDbHelper.GetTopRatedMovies(null,
            function (data) {
                if (data != null && data.results != null && data.results.length != null && data.results.length > 0) {
                    let topRatedMovies = data.results;
                    GetVideosForMovies(topRatedMovies);
                }
            },
            function (error) {
                console.log(error);
            }
        );
    }

    function GetVideosForMovies(movies) {
        for (let i = 0; i < movies.length; i++) {
            var _movie = movies[i];
            theMovieDbHelper.GetMovieVideos(movie.id, null,
                function (data) {
                    if (data != null && data.results != null && data.results.length != null && data.results.length > 0) {
                        let trailer = GetTrailer(data.results);
                        if (trailer != null) {
                            addMovieTrailerToContainer(_movie, trailer);
                        }
                    }
                },
                function (error) {
                    console.log(error);
                }
            );
        }
    }

    function GetTrailer(movieVideos) {
        let trailer = null;
        for (let i = 0; i < movieVideos.length; i++) {
            let video = movieVideos[i];
            if (video != null && video.type != null && video.type.toLowerCase() == "trailer") {
                trailer = video;
                break;
            }
        }
        if (video == null)
            video = movieVideos[0];
        return video;
    }

    function addMovieTrailerToContainer(movie, trailer) {

    }

    /* old functionality */
    jQuery(document).ready(function () {
        theMovieDbHelper.GetTrendingAllWeek(
            function (data) {
                let wrapper = jQuery('.trending');
                let movieContainer = jQuery('<div />');
                movieContainer.addClass('trend');
                wrapper.append(movieContainer);
                if(data != null && data.results != null && data.results.length != null) {
                    for (let i = 0; i < data.results.length; i++) {
                        let movie = data.results[i];
                        if (movie != null) {
                            let movieName = movie.title != undefined && movie.title != null ? movie.title : movie.name;
                            let movieID = movie.id;
                            movieContainer.append('<li><a onclick="showMovie(\''+movieName+'\', '+movieID+');" title="Click for more info">'+movieName+'</a></li>');
                        }
                    }
                }
            },
            function (error) {
            }
        );
    });
    
    const basicURL = "https://api.themoviedb.org/3/",
    api_key = "?api_key=e02e113c1e8d086578caa870a138b65a",
    moviesByKeyword = "search/movie",
    trending = "trending/all/week",
    movieInfo = "movie/",
    poster_path = "http://image.tmdb.org/t/p/original",
    recomendation = `/recommendations`,
    lang_ending = `&language=en-US`;

    let showMovie = (name, id) => {
        let wrapper = document.querySelector(".wrapper");
        wrapper.innerHTML = null;
        wrapper.classList.remove("trending");
        wrapper.classList.add("movie");
        wrapper.insertAdjacentHTML("beforeend", `<div class="moviePoster"><img></div>
    <div class="movieInfo">
        <div class="movieName"><h2 class="movieHeading"></h2></div>
        <div class="movieOverview"><h2 class="overviewHeading">Overview</h2></div>
        <div class="movieRecomendations"><h2 class="recomendationHeading">Recommendations</h2><ul class="recomend"></ul></div>
    </div>`);

        let url = `${basicURL}${movieInfo}${id}${api_key}${lang_ending}`;
        fetch(url)
        .then((result) => {
            return result.json();
        })
        .then((data) => {
            console.log(data);
            let paragraphOverview = document.createElement('p'), posterImg = `${poster_path}${data.poster_path}`;
            paragraphOverview.textContent = data.overview;
            document.querySelector('.movieHeading').textContent = `${name} (${data.release_date.slice(0, 4)})`;
            document.querySelector('.movieOverview').append(paragraphOverview);
            document.querySelector(".moviePoster img").setAttribute("src", posterImg);
            showRecomendation(id);
        })
    }

    let showRecomendation = (id) => {
        let url = `${basicURL}${movieInfo}${id}${recomendation}${api_key}${lang_ending}`, recomendListNumber = 3;
        fetch(url)
        .then((result) => {
            return result.json();
        })
        .then((data) => {
            let moviesArray = data.results;
            if (moviesArray.length >= recomendListNumber) {
                let i = 0;
                for (i; i < recomendListNumber; i++) {
                    let movieName = moviesArray[i].title != undefined ? moviesArray[i].title : moviesArray[i].name, movieID = moviesArray[i].id;
                    document.querySelector(".movieRecomendations ul").insertAdjacentHTML("beforeend", `<li class="recommendated"><a title="Click for more info" onclick="showMovie('${movieName}', '${movieID}');">${movieName}</a></li>`);
                }
            }
            else {
                let i = 0;
                for (i; i < moviesArray.length; i++) {
                    let movieName = moviesArray[i].title != undefined ? moviesArray[i].title : moviesArray[i].name, movieID = moviesArray[i].id;
                    document.querySelector(".movieRecomendations ul").insertAdjacentHTML("beforeend", `<li class="recommendated"><a onclick="showMovie('${movieName}', '${movieID}');">${movieName}</a></li>`);
                }
            }
        })
    }

    let returnByKeywords = (event) => {
        event.preventDefault();
        let keyword = document.querySelector(".keywordInput").value;
        let url = `${basicURL}${moviesByKeyword}${api_key}${lang_ending}&query=${keyword}`;
        fetch(url)
        .then((result) => {
            console.log("key");
            return result.json();
        })
        .then((data) => {
            buildListByKey(data);
        })
    }

    let buildListByKey = (data) => {
        let wrapper = document.querySelector(".wrapper"), moviesArray = data.results;
        wrapper.innerHTML = null;
        wrapper.classList.remove("trending");
        wrapper.classList.remove("movie");
        wrapper.classList.add("Search");
        let ul = document.createElement("ul");
        wrapper.append(ul);
        let i = 0;
        for (i; i <= data.results.length; i++) {
            let movieName = moviesArray[i].title != undefined ? moviesArray[i].title : moviesArray[i].name, movieID = moviesArray[i].id;
            ul.insertAdjacentHTML("beforeend", `<li><a onclick="showMovie('${movieName}', '${movieID}');">${data.results[i].title}</a></li>`);
        }
    }
</script>